# Rime schema
# encoding: utf-8

patch:
  # 开关
  switches:
    - name: ascii_mode
      states: ["中", "A"]
      reset: 1                  # 默认西文
    - name: simplification      # 只能这个名字
      states: ["繁", "简"]
      reset: 1                  # 默认简体
    - name: full_shape
      states: ["半角", "全角"]
      reset: 0                  # 默认半角
    - name: emoji_suggestion    # 要和下面 simplifier 的 option_name 保持一致
      states: [ "🈚️️", "🈶️️" ]
      reset: 1

  # 引擎
  engine:
    processors:          # 这批组件处理按键消息
      - ascii_composer   # 处理西文模式及中西文切换
      - recognizer       # 与 segmentors 中的 matcher 搭配，处理符合特定规则的输入码，如网址、反查等
      - key_binder       # 在特定条件下将按键绑定到其他按键，如重定义逗号、句号与候选翻页、开关快捷键等
      - speller          # 拼写处理器，接受字符按键，编辑输入
      - punctuator       # 句读处理器，将单个字符快捷键直接映射为标点符号或文字
      - selector         # 选字处理器，处理数字选字键〔可以换成其他〕、上、下定位候选、换页
      - navigator        # 处理输入栏内部的移动
      - express_editor   # 编辑器，处理空格、回车上屏、回退键
    segmentors:              # 这批组件识别不用的内容类型，将输入码分段并加上 tag
      - ascii_segmentor      # 标识西文段落〔比喻如在西文模式下〕字母直接上屛
      - matcher              # 与 processors 中的 recognizer 搭配，处理符合特定规则的输入码，如网址、反查等
      - abc_segmentor        # 符号惯用的文字段落，加上abc这个tag
      - punct_segmentor      # 符号句读句子〔键入标点符号用〕加上punct这个tag
      - fallback_segmentor   # 其他标识未标识文字
    translators:                         # 这批组件翻译特定类型的编码段为一组候选字
      - punct_translator                 # 配合punct_segmentor转换标点符号
      - reverse_lookup_translator        # 反查翻译器，用另一种编码方案查码
      - script_translator                # 脚本翻译器，用于拼音、粤拼等基于音节表的输入方案
      - table_translator@custom_phrase   # 自定义短语 custom_phrase.txt
    filters:                             # 这批组件过滤转换的结果
      - simplifier@emoji_suggestion      # Emoji，要和下面 Emoji 的 option_name 保持一致
      - simplifier                       # 简繁转换
      - uniquifier                       # 过滤的重复候选字，有可能来自simplifier

  # 自定义短语
  custom_phrase:
    dictionary: ""
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false # 补全提示
    enable_sentence: false   # 禁止造句
    initial_quality: 99      # 给予 custom_phrase 更大的权重

  # Emoji，要和 switches、engine 中的配置保持一致
  emoji_suggestion:
    opencc_config: emoji.json
    option_name: emoji_suggestion


  ############################################

  # 标点符号
  # half_shape 半角标点映射
  # symbols    Rime 预设配置是以 '/' 前缀开头输出一系列字符，自定义的 symbols_caps_s.yaml 修改成了 'S' 开头
  punctuator:
    half_shape:
      __include: default:/punctuator/half_shape  # 从 default.yaml 导入配置
    symbols:
      __include: symbols_caps_s:/symbols         # 从 symbols_caps_s.yaml 导入配置

  # 处理符合特定规则的输入码，如网址、邮箱
  recognizer:
    import_preset: default  # 从 default.yaml 继承通用的
    patterns:  # 再增加方案专有的：
      punct: "^S([0-9]|10|[A-Za-z]+)$"  # 响应 symbols_caps_s.yaml 的 symbols

  # 从 default 继承快捷键
  key_binder:
    import_preset: default  # 从 default.yaml 继承通用的
    # bindings:             # 也可以再增加方案专有的

